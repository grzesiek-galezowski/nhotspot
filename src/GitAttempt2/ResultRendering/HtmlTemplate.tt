<#@ template language="C#" #>
<doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <style>
	<#@ include file="styles.css" once="true" #>
<#@ import namespace="System.Security.Cryptography.X509Certificates" #>
    </style>
    <title>Line Chart Test</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
    <meta charset="UTF-8">
</head>
<body>
<h1>Analysis of <#=_viewModel.RepoName #></h1>
    
<h1>Rankings</h1>

<# for(int i = 0 ; i < _viewModel.Rankings.Count ; ++i) {#>	
<# var ranking = _viewModel.Rankings[i]; #>
<div>
    <input type="checkbox" id="toggle<#=i #>" class="unfolder"/> 
    <label for="toggle<#=i #>" class="toggle-label"><h2><#= ranking.Title #></h2><span class="unfold-icon">&#9654;</span><span class="fold-icon">&#9660;</span></label>
    		
    <div class="fold">
		<ol>
	    <#  foreach(var entry in ranking.Entries) { #>
				<li><#= entry.Name #> (<#= entry.Value #>)</li>
		<#	} #>
	    </ol>
    </div>
<# }#>
</div>

<h1>Hot Spot rating per package (nested)</h1>

<#= PackageListView.RenderFrom(_viewModel.PackageTreeTree) #>


<h1>Hot Spots</h1>

<#  foreach(var hotSpot in _viewModel.HotSpots) {#>

	<h2><#= hotSpot.Rank #>. <#=hotSpot.Path #></h2>

	<table>
		<tr>
			<td>Complexity</td><td><#= hotSpot.Complexity #></td>		
		</tr>
		<tr>
			<td>Changes</td><td><#= hotSpot.ChangesCount #></td>
		</tr>
		<tr>
			<td>Created</td><td><#= hotSpot.Age #> ago</td>
		</tr>
		<tr>
			<td>Last Changed</td><td><#= hotSpot.TimeSinceLastChanged #> ago</td>
		</tr>
		<tr>
			<td>Active for</td><td><#= hotSpot.ActivePeriod #> (First commit: <#= hotSpot.CreationDate #>, Last: <#= hotSpot.LastChangedDate #>)</td>
		</tr>
	</table>
	
	<div class="container">
	    <canvas id="myChart<#= hotSpot.Rank #>" height="40"></canvas>
	</div>
	<script>
	    var ctx = document.getElementById('myChart<#= hotSpot.Rank #>').getContext('2d');
	    var chart = new Chart(ctx, {
	        // The type of chart we want to create
	        type: 'line',
	        options: {
	            elements: {
	                line: {
	                    tension: 0 // disables bezier curves
	                }
	            }
	        },
	        // The data for our dataset
	        data: {
	            labels: [<#= hotSpot.Labels #>], //example '1', '2', '3'
	            datasets: [{
	                label: '<#= hotSpot.ChartValueDescription #>',
	                fill: false,
	                borderColor: 'rgb(255, 99, 132)',
	                data: [<#= hotSpot.Data #>]
	            }]
	        },

	    });
	</script>
    
<#  } #>


</body>
</html>
<#+private ViewModel _viewModel; #>
